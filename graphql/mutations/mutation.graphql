extend type Mutation {
  "Auth"
  login(email: String!, password: String!): UserToken!
    @field(resolver: "AuthMutation@login")
  register(
    name: String! @rules(apply: ["required"])
    email: String! @rules(apply: ["required", "unique:users,email"])
    password: String! @rules(apply: ["required", "min:6", "confirmed"])
    password_confirmation: String! @rules(apply: ["required", "min:6"])
  ): User! @create
}

extend type Mutation @guard {
  createPage(
    title: String!
    slug: String
    description: String
    content: String
    thumbnail: String
  ): Page!
    @create
    @InputPageValidation
    @inject(context: "user.id", name: "user_id")

  updatePage(
    id: ID!
    title: String!
    slug: String
    description: String
    content: String
    thumbnail: String
  ): Page! @update @InputPageValidation

  createPost(
    title: String! @rules(apply: ["required"])
    slug: String @rules(apply: ["unique:posts,slug"])
    description: String!
    content: String!
    thumbnail: String!
  ): Post! @create @inject(context: "user.id", name: "user_id")
}
